fn assert(test, err): if !test: {
   puts("failed: ".append(err))
   quit()
}

assert(0.0 != 1.0, "0.0 != 1.0")

assert(0 == 0.0, "0 == 0.0")
assert(1.0 == 1, "1.0 == 1")
assert(1 != 1.3,  "1 != 1.3")
assert(1.3 != 1,  "1.3 != 1")

let i = 1000.0
while i > 0.0: {
  i = i - 1.0
  assert(i / 1.0 == i, "i / 1.0 == i")
  if i != 0.0: assert(i / i == 1.0, "i / i == 1.0")

  assert(i - i == 0, "i - i == 0")
  assert(i - 0 == i, "i - 0 == 0")

  assert(-i + i == 0, "-i + i == 0")
  assert(i + 0 == i,  "i + 0 == i")

  assert(i == i,   "i == i")
  assert(i != -1.0,  "i != -1")
  assert(i < 1000, "i < 1000")
  assert(i > -1,   "i > -1")
  assert(i <= i,   "i <= i")
  assert(i >= i,   "i >= i")
  assert(i >= 0,   "i >= 0")
  assert(i <= 999, "i <= 999")

  assert(i * 1 == i,      "i * 1 == i")
  assert(i * 0 == 0,      "i * 0 == 0")

  assert(i * -1 == 0 - i, "i * -1 == 0 - i")
}

assert(10.0 / 2.0 == 5,    "10.0 / 2.0 == 5")
assert(4.0 / 5 == 0.8,     "4.0 / 5 == 0.8")
assert(3.0 / 2.0 == 1.5,   "3.0 / 2.0 == 1.5")
assert(4000 / 2.0 == 2000, "4000 / 2.0 == 2000")

assert(0.0 - 1.0 == -1, "0.0 - 1.0 == -1")

