require "assert.vv"

assert(0 != 1, "0 != 1")
assert(0.type() == Integer, "0.type() == Integer")

let i = 1000
while i > 0: {
  i = i - 1
  assert(i / 1 == i, "i / 1 == i")
  if i != 0: assert(i / i == 1, "i / i == 1")

  assert(i - i == 0, "i - i == 0")
  assert(i - 0 == i, "i - 0 == 0")

  assert(-i + i == 0, "-i + i == 0")
  assert(i + 0 == i,  "i + 0 == i")

  assert(i == i,   "i == i")
  assert(i != -1,  "i != -1")
  assert(i < 1000, "i < 1000")
  assert(i > -1,   "i > -1")
  assert(i <= i,   "i <= i")
  assert(i >= i,   "i >= i")
  assert(i >= 0,   "i >= 0")
  assert(i <= 999, "i <= 999")

  assert(i * 1 == i,      "i * 1 == i")
  assert(i * 0 == 0,      "i * 0 == 0")

  assert(i * -1 == 0 - i, "i * -1 == 0 - i")

  assert(i & i == i, "i & i == i")
  assert(i & 0 == 0, "i & i == i")
  assert(i | i == i, "i | i == i")
  assert(i | 0 == i, "i | 0 == i")
  assert(i ^ i == 0, "i ^ i == 0")
  assert(i ^ 0 == i, "i ^ 0 == i")

  assert(i >> 1 == i / 2, "i >> 1 == i / 2")
}

assert(10 / 2 == 5,      "10 / 2 == 5")
assert(4 / 5 == 0,       "4 / 5 == 0")
assert(3 / 2 == 1,       "3 / 2 == 1")
assert(4000 / 2 == 2000, "4000 / 2 == 2000")

assert(0 - 1 == -1, "0 - 1 == -1")

